<script src="~/scripts/d3/d3.js"></script>

@{
    ViewBag.Title = "D3Scale";
}

<h2>D3-Scale</h2>

<style>
    .cell {
        border: 1px solid red;
        margin: 5px;
        padding: 2px;
    }
</style>

线性尺度
<p id="chart0"></p>
线性尺度映射结果
<p id="chart1"></p>
时间尺度映射
<p id="chart2"></p>
有序尺度
<p id="chart3"></p>

<textarea style="width:100%;height:500px;">
    var linear = d3.scaleLinear()
    .domain([1, 10])
    .range([1, 20]);

    // 相当于 公式
    // f(n) = a * n + b
    // 1 <= f(n) <= 20
    // 把 n = 1 和 n = 20 带入公式计算
    //
    //  a * 1 + b = 1
    //  a * 20 + b = 20
    //  方程二减方程一得到 19 * a = 19
    // 得到 a = 2.111 得到 b = -1.11

    // 1~20 均分为10等分。相当于 把 19 均分9份即可
    // (20 - 1) / (10 - 1) = 2.1111

    // 1
    // 1 + 2.111
    // 1 + 2.111 + 2.111

    var linear1 = d3.scaleLinear()
    .domain([1, 10])
    .range([1, 100]);

    // (100 - 1) / (10 - 1) = 11
    // 1                 = 11 * 0 + 1
    // 1 + 11            = 11 * 1 + 1
    // 1 + 11 + 11       = 11 * 2 + 1
    // 1 + 11 + 11 + 11  = 11 * 3 + 1
</textarea>

<div>
    <script>

        d3.interpolat

        //var colors = function (s) {
        //    return s.match(/.{6}/g).map(function (x) {
        //        return "#" + x;
        //    });
        //};

        var data = [];
        for (var i = 1; i <= 10; i++) {
            data.push(i);
        }

        var linear = d3.scaleLinear()
        .domain([1, 10])
        .range([1, 20]);

        d3.select("p#chart0").selectAll("div.cell")
        .data(data)
        .enter()
        .append("div")
        .classed("cell", true);

        d3.select("p#chart0").selectAll("div.cell")
        .data(data)
        .exit()
        .remove()

        d3.select("p#chart0").selectAll("div.cell")
        .data(data)
        .style("display", "inline-block")
        .text(function (d, i) {
            return Math.round(d, 2);
        });


        d3.select("p#chart1").selectAll("div.cell")
        .data(data)
        .enter()
        .append("div")
        .classed("cell", true);

        d3.select("p#chart1").selectAll("div.cell")
        .data(data)
        .exit()
        .remove()

        d3.select("p#chart1").selectAll("div.cell")
        .data(data)
        .style("display", "inline-block")
        .text(function (d, i) {
            return linear(d);
        });



        // 时间 尺度

        var startDate = new Date(2013, 0, 1),
            endDate = new Date(2013, 11, 31),
            range = [0, 1200],
            timeScale = d3.scaleTime().domain([startDate, endDate]).range(range);

        var data1 = [];
        for (var i = 0; i < 12; ++i) {
            var date = new Date(startDate.getTime());
            date.setMonth(startDate.getMonth() + i);
            data1.push(date);
        }
        d3.select("p#chart2").selectAll("div.cell")
        .data(data1)
        .enter()
        .append("div")
        .classed("cell", true);

        d3.select("p#chart2").selectAll("div.cell")
        .data(data1)
        .exit()
        .remove()

        d3.select("p#chart2").selectAll("div.cell")
        .data(data1)
        .style("display", "inline-block")
        .html(function (d, i) {
            return d3.timeFormat("%x")(d) + "<br />" + timeScale(d) + "px";
        });


        var yxData = [1, 2, 3, 10, 8];
        // 有序尺度
        var so1 = d3.scaleOrdinal()
            .domain(yxData)
            .range(["a", "b", "c"]);

        // d3 内置有序颜色尺度
        var so2 = d3.scaleOrdinal()
        .domain(yxData)
        // d3 内置
        .range(d3.schemeCategory10);

        d3.select("p#chart3").selectAll("div.cell")
            .data(yxData)
        .enter()
        .append("div")
        .classed("cell", true);

        d3.select("p#chart3").selectAll("div.cell")
        .data(yxData)
        .style("background-color", function (d) {
            return so2(d);
        })
    </script>
</div>
